初始操作

git config --global user.name "Lin Momo"
git config --global user.email "18983235402@163.com"

pwd 目录查看
cd D:/Files/git   改变目录
mkdir EnglishStudy   创建目录
git init /d/Files/git/EnglishStudy  初始化项目
ls -ah 或者 dir   查看目录文件列表
git add readme.txt      添加文件,在commit前可以add txt1 txt2 txt3多个文件,实际上就是把文件修改添加到暂存区(stage)
git commit -m "说明"     提交文件,提示 file changed,可以一次性提交多个add文件.实际上就是把暂存区的所有内容提交到当前分支(master)
你可以简单理解为，需要提交的文件修改通通放到暂存区，然后，一次性提交暂存区的所有修改。
git status     查看当前仓库状态,文件是否变动
git diff readme.txt     查看文件改动的内容(改动文件未被提交的话则会提示,若是没有改动,则没有任何返回提示)
改动后仍需用git add 和git commit  再次提交




版本回退

git log   查看修改历史,提交记录
git log --pretty=oneline   简化日志记录
git reset --hard HEAD^    回退到上一版本
cat readme.txt  查看回退后的内容
git reset --hard commit id    利用commit id回到回退前的版本,版本号没必要写全，前几位就可以了，Git会自动去找.

Git的版本回退速度非常快，因为Git在内部有个指向当前版本的HEAD指针.
git reflog     用来查看你的每一次命令.


撤销修改

git restore -- file    可以丢弃工作区的修改(未add)
一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；
一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。

git reset -- file    可以丢弃工作区的修改(已add未commit)
git reset HEAD <file>可以把暂存区的修改撤销掉（unstage），重新放回工作区.
git reset命令既可以回退版本，也可以把暂存区的修改回退到工作区。当我们用HEAD时，表示最新的版本。
再用git status查看一下，现在暂存区是干净的，工作区有修改.


删除
rm test.txt
git rm test.txt



